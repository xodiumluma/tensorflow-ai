FROM node:current-bookworm-slim
ADD __learn__/bcr-bazel-build.pem /usr/local/share/ca-certificates/bazel.crt
ENV TF=tensorflow
ENV MY_WORKSPACE=buildmachine
ENV SOURCE_DIR=/${MY_WORKSPACE}/${TF}
ENV VENV_DIR=/${SOURCE_DIR}/.venv
ENV BOOT_VIRTUAL_ENV='python3 -m venv ${VENV_DIR} && . ${VENV_DIR}/bin/activate'
ENV PIP_INSTALL='python3 -m pip install -U --trusted-host pypi.org --trusted-host files.pythonhosted.org'
ENV BUILD_PIP_PACKAGE='${SOURCE_DIR}/bazel-bin/${TF}/tools/pip_package/build_pip_package'
ENV TEMP_TF=${MY_WORKSPACE}/tmp
RUN apt update -y && \
  apt install -y apt-transport-https ca-certificates && \
  dpkg-reconfigure ca-certificates && \
  echo "Installed PKI components" && \
  apt install -y python3-dev python3-pip python3.11-venv && \
  echo "Installed TF package deps" && \
  apt install -y llvm-16 clang-16 && \
  echo "Installed Clang compiler"
RUN npm i -g @bazel/bazelisk
USER node
WORKDIR /${SOURCE_DIR}
COPY --chmod=755 --chown=node:node . .
RUN chmod -R +x . && \
  eval ${BOOT_VIRTUAL_ENV} && \
  eval "${PIP_INSTALL} truststore pip numpy wheel packaging requests opt_einsum patchelf" && \
  eval "${PIP_INSTALL} keras_preprocessing --no-deps" && \
  ./configure && \
  $(which bazelisk) build --config=monolithic --config=cuda //${TF}/tools/pip_package:build_pip_package && \
  mkdir ${TEMP_TF} \
  PATH=${PATH}:${VENV_DIR}/bin eval ${BUILD_PIP_PACKAGE}
